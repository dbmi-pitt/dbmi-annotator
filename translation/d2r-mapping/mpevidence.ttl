@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix d2r: <http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#> .
@prefix meta: <http://www4.wiwiss.fu-berlin.de/bizer/d2r-server/metadata#> .
@prefix obo: <http://purl.obolibrary.org/obo/> .

<> a d2r:Server;
      rdfs:label "D2R Server for mpevidence";
      .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
    d2rq:jdbcDSN "jdbc:postgresql://localhost/mpevidence?autoReconnect=true&user=dbmiannotator&password=dbmi2016";   
	.

########################## DIDEO ONTOLOGY MAPPING TABLES ########################### 
# MP Data Mapping
map:mpDataTranslate a d2rq:TranslationTable;
    d2rq:translation [ d2rq:databaseValue "auc"; d2rq:rdfValue obo:DIDEO_00000093; ];
    d2rq:translation [ d2rq:databaseValue "cmax"; d2rq:rdfValue obo:DIDEO_00000099; ];
    d2rq:translation [ d2rq:databaseValue "clearance"; d2rq:rdfValue obo:DIDEO_00000101; ];
    d2rq:translation [ d2rq:databaseValue "halflife"; d2rq:rdfValue obo:DIDEO_00000100; ];
.

# MP Data Field Mapping
map:mpDataFieldTranslate a d2rq:TranslationTable;
    d2rq:translation [ d2rq:databaseValue "percent"; d2rq:rdfValue obo:UO_0000187; ];
    d2rq:translation [ d2rq:databaseValue "fold"; d2rq:rdfValue obo:DIDEO_00000091; ];
.
# MP Method Mapping
map:mpMethodTranslate a d2rq:TranslationTable;
    d2rq:translation [ d2rq:databaseValue "DDI clinical trial"; d2rq:rdfValue obo:DIDEO_00000071; ];
.

# View - clinical trial, interact with, auc fold 
map:ct_iw_auc_fold_view a d2rq:ClassMap;
	d2rq:dataStorage map:database;
    d2rq:uriPattern "http://auc-fold/@@UUID@@";
	d2rq:class vocab:ct_iw_auc_fold_view;
	d2rq:classDefinitionLabel "clinical trial, interact with, auc fold";
    .

map:claim_qualifier_view_subject a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ct_iw_auc_fold_view;
	d2rq:property rdf:type;
	d2rq:column "ct_iw_auc_fold_view.precipitant_code";
	d2rq:datatype xsd:String;
    .


# # Table material_field
# map:material_field a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "material_field/@@material_field.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/material_field:', material_field.id)";
# 	d2rq:class vocab:material_field;
# 	d2rq:classDefinitionLabel "material_field";
# 	.
# map:material_field__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "material_field #@@material_field.id@@";
# 	.
# map:material_field_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property vocab:material_field_id;
# 	d2rq:propertyDefinitionLabel "material_field id";
# 	d2rq:column "material_field.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:material_field_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property vocab:material_field_urn;
# 	d2rq:propertyDefinitionLabel "material_field urn";
# 	d2rq:column "material_field.urn";
# 	.
# map:material_field_material_field_type a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property vocab:material_field_material_field_type;
# 	d2rq:propertyDefinitionLabel "material_field material_field_type";
# 	d2rq:column "material_field.material_field_type";
# 	.
# map:material_field_value_as_string a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property vocab:material_field_value_as_string;
# 	d2rq:propertyDefinitionLabel "material_field value_as_string";
# 	d2rq:column "material_field.value_as_string";
# 	.
# map:material_field_value_as_number a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property vocab:material_field_value_as_number;
# 	d2rq:propertyDefinitionLabel "material_field value_as_number";
# 	d2rq:column "material_field.value_as_number";
# 	d2rq:datatype xsd:decimal;
# 	.
# map:material_field_material_body_id__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:material_field;
# 	d2rq:property vocab:material_field_material_body_id;
# 	d2rq:refersToClassMap map:oa_material_body;
# 	d2rq:join "material_field.material_body_id => oa_material_body.id";
# 	.

# # Table method
# map:method a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "method/@@method.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/method:', method.id)";
# 	d2rq:class vocab:method;
# 	d2rq:classDefinitionLabel "method";
# 	.
# map:method__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:method;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "method #@@method.id@@";
# 	.
# map:method_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:method;
# 	d2rq:property vocab:method_id;
# 	d2rq:propertyDefinitionLabel "method id";
# 	d2rq:column "method.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:method_value a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:method;
# 	d2rq:property vocab:method_value;
# 	d2rq:propertyDefinitionLabel "method value";
# 	d2rq:column "method.value";
#     d2rq:translateWith map:mpMethodTranslate;
# 	.
# map:method_mp_data_index a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:method;
# 	d2rq:property vocab:method_mp_data_index;
# 	d2rq:propertyDefinitionLabel "method mp_data_index";
# 	d2rq:column "method.mp_data_index";
# 	d2rq:datatype xsd:integer;
# 	.
# map:method_mp_claim_id__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:method;
# 	d2rq:property vocab:method_mp_claim_id;
# 	d2rq:refersToClassMap map:mp_claim_annotation;
# 	d2rq:join "method.mp_claim_id => mp_claim_annotation.id";
# 	.

# # Table mp_claim_annotation
# map:mp_claim_annotation a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "mp_claim_annotation/@@mp_claim_annotation.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/mp_claim_annotation:', mp_claim_annotation.id)";
# 	d2rq:class vocab:mp_claim_annotation;
# 	d2rq:classDefinitionLabel "mp_claim_annotation";
# 	.
# map:mp_claim_annotation__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property rdfs:label;
# 	d2rq:join "mp_claim_annotation.has_body => oa_claim_body.id";
# 	d2rq:column "oa_claim_body.label";
# 	# d2rq:pattern "mp_claim_annotation #@@mp_claim_annotation.id@@";
# 	.
# map:mp_claim_annotation_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_id;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation id";
# 	d2rq:column "mp_claim_annotation.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_claim_annotation_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_urn;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation urn";
# 	d2rq:column "mp_claim_annotation.urn";
# 	.
# map:mp_claim_annotation_has_body__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_has_body;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation has_body";
# 	d2rq:refersToClassMap map:oa_claim_body;
# 	d2rq:join "mp_claim_annotation.has_body => oa_claim_body.id";
# 	# d2rq:column "mp_claim_annotation.has_body";
# 	# d2rq:datatype xsd:integer;
# 	.
# map:mp_claim_annotation_has_target__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_has_target;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation has_target";
# 	d2rq:refersToClassMap map:oa_target;
# 	d2rq:join "mp_claim_annotation.has_target => oa_target.id";
# 	# d2rq:column "mp_claim_annotation.has_target";
# 	# d2rq:datatype xsd:integer;
# 	.
# map:mp_claim_annotation_creator a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_creator;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation creator";
# 	d2rq:column "mp_claim_annotation.creator";
# 	.
# map:mp_claim_annotation_date_created a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_date_created;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation date_created";
# 	d2rq:column "mp_claim_annotation.date_created";
# 	d2rq:datatype xsd:dateTime;
# 	.
# map:mp_claim_annotation_date_updated a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_claim_annotation;
# 	d2rq:property vocab:mp_claim_annotation_date_updated;
# 	d2rq:propertyDefinitionLabel "mp_claim_annotation date_updated";
# 	d2rq:column "mp_claim_annotation.date_updated";
# 	d2rq:datatype xsd:dateTime;
# 	.

# # Table mp_data_annotation
# map:mp_data_annotation a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "mp_data_annotation/@@mp_data_annotation.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/mp_data_annotation:', mp_data_annotation.id)";
# 	d2rq:class vocab:mp_data_annotation;
# 	d2rq:classDefinitionLabel "mp_data_annotation";
# 	.
# map:mp_data_annotation__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "mp_data_annotation #@@mp_data_annotation.id@@";
# 	.
# map:mp_data_annotation_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_id;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation id";
# 	d2rq:column "mp_data_annotation.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_data_annotation_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_urn;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation urn";
# 	d2rq:column "mp_data_annotation.urn";
# 	.

# # MP DATA AUC/CMAX/CLEARANCE/HALFLIFE
# map:mp_data_annotation_type a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_type;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation type";
# 	d2rq:column "mp_data_annotation.type";
#     d2rq:translateWith map:mpDataTranslate;
# 	.

# map:mp_data_annotation_has_body a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_has_body;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation has_body";
# 	d2rq:refersToClassMap map:oa_data_body;
# 	d2rq:join "mp_data_annotation.has_body => oa_data_body.id";
# 	# d2rq:column "mp_data_annotation.has_body";
# 	# d2rq:datatype xsd:integer;
# 	.
# map:mp_data_annotation_has_target a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_has_target;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation has_target";
# 	d2rq:column "mp_data_annotation.has_target";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_data_annotation_creator a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_creator;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation creator";
# 	d2rq:column "mp_data_annotation.creator";
# 	.
# map:mp_data_annotation_mp_data_index a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_mp_data_index;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation mp_data_index";
# 	d2rq:column "mp_data_annotation.mp_data_index";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_data_annotation_ev_supports a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_ev_supports;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation ev_supports";
# 	d2rq:column "mp_data_annotation.ev_supports";
# 	d2rq:valueRegex "^[01]*$";
# 	.
# map:mp_data_annotation_date_created a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_date_created;
# 	d2rq:propertyDefinitionLabel "mp_data_annotation date_created";
# 	d2rq:column "mp_data_annotation.date_created";
# 	d2rq:datatype xsd:dateTime;
# 	.
# map:mp_data_annotation_mp_claim_id__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_data_annotation;
# 	d2rq:property vocab:mp_data_annotation_mp_claim_id;
# 	d2rq:refersToClassMap map:mp_claim_annotation;
# 	d2rq:join "mp_data_annotation.mp_claim_id => mp_claim_annotation.id";
# 	.

# # Table mp_material_annotation
# map:mp_material_annotation a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "mp_material_annotation/@@mp_material_annotation.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/mp_material_annotation:', mp_material_annotation.id)";
# 	d2rq:class vocab:mp_material_annotation;
# 	d2rq:classDefinitionLabel "mp_material_annotation";
# 	.
# map:mp_material_annotation__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "mp_material_annotation #@@mp_material_annotation.id@@";
# 	.
# map:mp_material_annotation_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_id;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation id";
# 	d2rq:column "mp_material_annotation.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_material_annotation_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_urn;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation urn";
# 	d2rq:column "mp_material_annotation.urn";
# 	.
# map:mp_material_annotation_type a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_type;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation type";
# 	d2rq:column "mp_material_annotation.type";
# 	.
# map:mp_material_annotation_has_body__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_has_body;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation has_body";
# 	d2rq:refersToClassMap map:oa_material_body;
# 	d2rq:join "mp_material_annotation.has_body => oa_material_body.id";
# 	# d2rq:column "mp_material_annotation.has_body";
# 	# d2rq:datatype xsd:integer;
# 	.
# map:mp_material_annotation_has_target a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_has_target;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation has_target";
# 	d2rq:column "mp_material_annotation.has_target";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_material_annotation_creator a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_creator;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation creator";
# 	d2rq:column "mp_material_annotation.creator";
# 	.
# map:mp_material_annotation_mp_data_index a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_mp_data_index;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation mp_data_index";
# 	d2rq:column "mp_material_annotation.mp_data_index";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_material_annotation_ev_supports a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_ev_supports;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation ev_supports";
# 	d2rq:column "mp_material_annotation.ev_supports";
# 	d2rq:valueRegex "^[01]*$";
# 	.
# map:mp_material_annotation_date_created a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_date_created;
# 	d2rq:propertyDefinitionLabel "mp_material_annotation date_created";
# 	d2rq:column "mp_material_annotation.date_created";
# 	d2rq:datatype xsd:dateTime;
# 	.
# map:mp_material_annotation_mp_claim_id__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_material_annotation;
# 	d2rq:property vocab:mp_material_annotation_mp_claim_id;
# 	d2rq:refersToClassMap map:mp_claim_annotation;
# 	d2rq:join "mp_material_annotation.mp_claim_id => mp_claim_annotation.id";
# 	.

# # Table mp_reference
# map:mp_reference a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "mp_reference/@@mp_reference.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/mp_reference:', mp_reference.id)";
# 	d2rq:class vocab:mp_reference;
# 	d2rq:classDefinitionLabel "mp_reference";
# 	.
# map:mp_reference__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_reference;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "mp_reference #@@mp_reference.id@@";
# 	.
# map:mp_reference_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_reference;
# 	d2rq:property vocab:mp_reference_id;
# 	d2rq:propertyDefinitionLabel "mp_reference id";
# 	d2rq:column "mp_reference.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:mp_reference_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_reference;
# 	d2rq:property vocab:mp_reference_urn;
# 	d2rq:propertyDefinitionLabel "mp_reference urn";
# 	d2rq:column "mp_reference.urn";
# 	.
# map:mp_reference_reference a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_reference;
# 	d2rq:property vocab:mp_reference_reference;
# 	d2rq:propertyDefinitionLabel "mp_reference reference";
# 	d2rq:column "mp_reference.reference";
# 	.
# map:mp_reference_author a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_reference;
# 	d2rq:property vocab:mp_reference_author;
# 	d2rq:propertyDefinitionLabel "mp_reference author";
# 	d2rq:column "mp_reference.author";
# 	.
# map:mp_reference_reference_date a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:mp_reference;
# 	d2rq:property vocab:mp_reference_reference_date;
# 	d2rq:propertyDefinitionLabel "mp_reference reference_date";
# 	d2rq:column "mp_reference.reference_date";
# 	d2rq:datatype xsd:date;
# 	.

# # Table oa_claim_body
# map:oa_claim_body a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "oa_claim_body/@@oa_claim_body.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/oa_claim_body:', oa_claim_body.id)";
# 	d2rq:class vocab:oa_claim_body;
# 	d2rq:classDefinitionLabel "oa_claim_body";
# 	.
# map:oa_claim_body__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "oa_claim_body #@@oa_claim_body.id@@";
# 	.
# map:oa_claim_body_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property vocab:oa_claim_body_id;
# 	d2rq:propertyDefinitionLabel "oa_claim_body id";
# 	d2rq:column "oa_claim_body.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_claim_body_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property vocab:oa_claim_body_urn;
# 	d2rq:propertyDefinitionLabel "oa_claim_body urn";
# 	d2rq:column "oa_claim_body.urn";
# 	.
# map:oa_claim_body_label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property vocab:oa_claim_body_label;
# 	d2rq:propertyDefinitionLabel "oa_claim_body label";
# 	d2rq:column "oa_claim_body.label";
# 	.
# map:oa_claim_body_claim_text a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property vocab:oa_claim_body_claim_text;
# 	d2rq:propertyDefinitionLabel "oa_claim_body claim_text";
# 	d2rq:column "oa_claim_body.claim_text";
# 	.
# map:oa_claim_body_np_assertion_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property vocab:oa_claim_body_np_assertion_id;
# 	d2rq:propertyDefinitionLabel "oa_claim_body np_assertion_id";
# 	d2rq:column "oa_claim_body.np_assertion_id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_claim_body_is_oa_body_of a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_claim_body;
# 	d2rq:property vocab:oa_claim_body_is_oa_body_of;
# 	d2rq:propertyDefinitionLabel "oa_claim_body is_oa_body_of";
# 	d2rq:column "oa_claim_body.is_oa_body_of";
# 	d2rq:datatype xsd:integer;
# 	.

# # Table oa_data_body
# map:oa_data_body a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "oa_data_body/@@oa_data_body.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/oa_data_body:', oa_data_body.id)";
# 	d2rq:class vocab:oa_data_body;
# 	d2rq:classDefinitionLabel "oa_data_body";
# 	.
# map:oa_data_body__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "oa_data_body #@@oa_data_body.id@@";
# 	.
# map:oa_data_body_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property vocab:oa_data_body_id;
# 	d2rq:propertyDefinitionLabel "oa_data_body id";
# 	d2rq:column "oa_data_body.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_data_body_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property vocab:oa_data_body_urn;
# 	d2rq:propertyDefinitionLabel "oa_data_body urn";
# 	d2rq:column "oa_data_body.urn";
# 	.
# map:oa_data_body_data_type a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property vocab:oa_data_body_data_type;
# 	d2rq:propertyDefinitionLabel "oa_data_body data_type";
# 	d2rq:column "oa_data_body.data_type";
#     d2rq:translateWith map:mpDataTranslate;
# 	.
# map:oa_data_body_vocabulary_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property vocab:oa_data_body_vocabulary_id;
# 	d2rq:propertyDefinitionLabel "oa_data_body vocabulary_id";
# 	d2rq:column "oa_data_body.vocabulary_id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_data_body_concept_code a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property vocab:oa_data_body_concept_code;
# 	d2rq:propertyDefinitionLabel "oa_data_body concept_code";
# 	d2rq:column "oa_data_body.concept_code";
# 	.
# map:oa_data_body_is_oa_body_of__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_data_body;
# 	d2rq:property vocab:oa_data_body_is_oa_body_of;
# 	d2rq:refersToClassMap map:mp_data_annotation;
# 	d2rq:join "oa_data_body.is_oa_body_of => mp_data_annotation.id";
# 	.

# # Table oa_material_body
# map:oa_material_body a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "oa_material_body/@@oa_material_body.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/oa_material_body:', oa_material_body.id)";
# 	d2rq:class vocab:oa_material_body;
# 	d2rq:classDefinitionLabel "oa_material_body";
# 	.
# map:oa_material_body__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "oa_material_body #@@oa_material_body.id@@";
# 	.
# map:oa_material_body_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property vocab:oa_material_body_id;
# 	d2rq:propertyDefinitionLabel "oa_material_body id";
# 	d2rq:column "oa_material_body.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_material_body_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property vocab:oa_material_body_urn;
# 	d2rq:propertyDefinitionLabel "oa_material_body urn";
# 	d2rq:column "oa_material_body.urn";
# 	.
# map:oa_material_body_material_type a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property vocab:oa_material_body_material_type;
# 	d2rq:propertyDefinitionLabel "oa_material_body material_type";
# 	d2rq:column "oa_material_body.material_type";
# 	.
# map:oa_material_body_vocabulary_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property vocab:oa_material_body_vocabulary_id;
# 	d2rq:propertyDefinitionLabel "oa_material_body vocabulary_id";
# 	d2rq:column "oa_material_body.vocabulary_id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_material_body_concept_code a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property vocab:oa_material_body_concept_code;
# 	d2rq:propertyDefinitionLabel "oa_material_body concept_code";
# 	d2rq:column "oa_material_body.concept_code";
# 	.
# map:oa_material_body_is_oa_body_of__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_material_body;
# 	d2rq:property vocab:oa_material_body_is_oa_body_of;
# 	d2rq:refersToClassMap map:mp_material_annotation;
# 	d2rq:join "oa_material_body.is_oa_body_of => mp_material_annotation.id";
# 	.

# # Table oa_selector
# map:oa_selector a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "oa_selector/@@oa_selector.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/oa_selector:', oa_selector.id)";

# 	d2rq:class vocab:oa_selector;
# 	d2rq:classDefinitionLabel "oa_selector";
# 	.
# map:oa_selector__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "oa_selector #@@oa_selector.id@@";
# 	.
# map:oa_selector_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property vocab:oa_selector_id;
# 	d2rq:propertyDefinitionLabel "oa_selector id";
# 	d2rq:column "oa_selector.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_selector_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property vocab:oa_selector_urn;
# 	d2rq:propertyDefinitionLabel "oa_selector urn";
# 	d2rq:column "oa_selector.urn";
# 	.
# map:oa_selector_selector_type a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property vocab:oa_selector_selector_type;
# 	d2rq:propertyDefinitionLabel "oa_selector selector_type";
# 	d2rq:column "oa_selector.selector_type";
# 	.
# map:oa_selector_exact a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property vocab:oa_selector_exact;
# 	d2rq:propertyDefinitionLabel "oa_selector exact";
# 	d2rq:column "oa_selector.exact";
# 	.
# map:oa_selector_prefix a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property vocab:oa_selector_prefix;
# 	d2rq:propertyDefinitionLabel "oa_selector prefix";
# 	d2rq:column "oa_selector.prefix";
# 	.
# map:oa_selector_suffix a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_selector;
# 	d2rq:property vocab:oa_selector_suffix;
# 	d2rq:propertyDefinitionLabel "oa_selector suffix";
# 	d2rq:column "oa_selector.suffix";
# 	.

# # Table oa_target
# map:oa_target a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "oa_target/@@oa_target.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/oa_target:', oa_target.id)";
# 	d2rq:class vocab:oa_target;
# 	d2rq:classDefinitionLabel "oa_target";
# 	.
# map:oa_target__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_target;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "oa_target #@@oa_target.id@@";
# 	.
# map:oa_target_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_target;
# 	d2rq:property vocab:oa_target_id;
# 	d2rq:propertyDefinitionLabel "oa_target id";
# 	d2rq:column "oa_target.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:oa_target_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_target;
# 	d2rq:property vocab:oa_target_urn;
# 	d2rq:propertyDefinitionLabel "oa_target urn";
# 	d2rq:column "oa_target.urn";
# 	.
# map:oa_target_has_source a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_target;
# 	d2rq:property vocab:oa_target_has_source;
# 	d2rq:propertyDefinitionLabel "oa_target has_source";
# 	d2rq:column "oa_target.has_source";
# 	.
# map:oa_target_has_selector__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:oa_target;
# 	d2rq:property vocab:oa_target_has_selector;
# 	d2rq:propertyDefinitionLabel "oa_target has_selector";
# 	d2rq:refersToClassMap map:oa_selector;
# 	d2rq:join "oa_target.has_selector => oa_selector.id";
# 	# d2rq:column "oa_target.has_selector";
# 	# d2rq:datatype xsd:integer;
# 	.

# # Table qualifier
# map:qualifier a d2rq:ClassMap;
# 	d2rq:dataStorage map:database;
# 	#d2rq:uriPattern "qualifier/@@qualifier.id@@";
#     d2rq:uriSqlExpression "CONCAT('http://dikb.org/mpevidence/qualifier:', qualifier.id)";
# 	d2rq:class vocab:qualifier;
# 	d2rq:classDefinitionLabel "qualifier";
# 	.
# map:qualifier__label a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property rdfs:label;
# 	d2rq:pattern "qualifier #@@qualifier.id@@";
# 	.
# map:qualifier_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_id;
# 	d2rq:propertyDefinitionLabel "qualifier id";
# 	d2rq:column "qualifier.id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:qualifier_urn a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_urn;
# 	d2rq:propertyDefinitionLabel "qualifier urn";
# 	d2rq:column "qualifier.urn";
# 	.
# map:qualifier_qvalue a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_qvalue;
# 	d2rq:propertyDefinitionLabel "qualifier qvalue";
# 	d2rq:column "qualifier.qvalue";
# 	.
# map:qualifier_subject a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_subject;
# 	d2rq:propertyDefinitionLabel "qualifier subject";
# 	d2rq:column "qualifier.subject";
# 	d2rq:valueRegex "^[01]*$";
# 	.
# map:qualifier_predicate a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_predicate;
# 	d2rq:propertyDefinitionLabel "qualifier predicate";
# 	d2rq:column "qualifier.predicate";
# 	d2rq:valueRegex "^[01]*$";
# 	.
# map:qualifier_object a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_object;
# 	d2rq:propertyDefinitionLabel "qualifier object";
# 	d2rq:column "qualifier.object";
# 	d2rq:valueRegex "^[01]*$";
# 	.
# map:qualifier_concept_code a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_concept_code;
# 	d2rq:propertyDefinitionLabel "qualifier concept_code";
# 	d2rq:column "qualifier.concept_code";
# 	.
# map:qualifier_vocabulary_id a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_vocabulary_id;
# 	d2rq:propertyDefinitionLabel "qualifier vocabulary_id";
# 	d2rq:column "qualifier.vocabulary_id";
# 	d2rq:datatype xsd:integer;
# 	.
# map:qualifier_claim_body_id__ref a d2rq:PropertyBridge;
# 	d2rq:belongsToClassMap map:qualifier;
# 	d2rq:property vocab:qualifier_claim_body_id;
# 	d2rq:refersToClassMap map:oa_claim_body;
# 	d2rq:join "qualifier.claim_body_id => oa_claim_body.id";
#	.

