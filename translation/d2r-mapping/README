-----------------------------------------------------------------------
Description
-----------------------------------------------------------------------
D2r server maps data in PostgreSQL to RDF via ttl mapping configuration (not available for now!)

Micropublication evidence with dideo ontology sample (Nelfinavir interact with simvastatin): 

http://dbmi-icode-01.dbmi.pitt.edu/describe/?url=http://dikb.org/assertion/fc673662-ca40-4d86-a881-c752ccf3bc33

-----------------------------------------------------------------------
D2R server mapping
-----------------------------------------------------------------------

D2R server reference: 
http://d2rq.org/getting-started
http://d2rq.org/d2r-server#command-line

Run:
$ cd <path to d2rq directory>
$ ./d2r-server --port 2020 <path to translation/d2r-mapping/auc-fold-mapping.ttl>

Open browser at "http://localhost:2020"

-----------------------------------------------------------------------
D2R server RDF dump (graph mpevidence.rdf)
-----------------------------------------------------------------------

Gernerate RDF graph based on d2r mapping configuration 
Reference: http://d2rq.org/dump-rdf

./dump-rdf -f RDF/XML -o mpevidence.rdf --verbose <path to translation/d2r-mapping/auc-fold-mapping.ttl>

Count instances of claim in RDF graph for validation
grep -r "rdf:Description rdf:about=\"http://dikb.org/mpevidence/mp_claim_annotation" mpevidence.rdf 

-----------------------------------------------------------------------
OWL merging
-----------------------------------------------------------------------

the tool for OWLs merge: https://github.com/ontodev/robot
commands: https://github.com/ontodev/robot/blob/master/examples/README.md

example:
$ robot merge -v --input <file-1>.owl --input <file-2>.owl --output <output-file>.owl

-----------------------------------------------------------------------
Virtuoso endpoint 
-----------------------------------------------------------------------

$ isql-vt
SQL> log_enable(3,1); # see http://www.openlinksw.com/dataspace/dav/wiki/Main/VirtTipsAndTricksGuideDeleteLargeGraphs

Delete graph from RDF store
SQL> SPARQL CLEAR GRAPH <graph name>;

Delete from load list
SQL> delete from DB.DBA.load_list where ll_graph='graph name';

Change status in load list 
SQL> update DB.DBA.load_list set ll_state = 0 where ll_file = '<name of RDF file>';

Initial load:
$ isql-vt
SQL> ld_dir ('/path/to/files', '*.n3', 'graph name');
SQL> rdf_loader_run();
SQL> select * from DB.DBA.load_list;
